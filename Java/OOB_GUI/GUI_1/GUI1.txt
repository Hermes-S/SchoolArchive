Zadania do wykonania


Zadanie 1 -  max. 2 punkty

Firma "Applee" prowadzi kilka sklepów z jabłkami :-).
Wszystkie sklepy kupują jabłka po tej samej cenie hurtowej i sprzedają jabłka po tej samej cenie detalicznej.
Stworzyć klasę Sklep, reprezentującą jeden sklep w taki sposób, aby następujący program:


public class Test {

 public static void main(String[] args) {
    
    Sklep.setCenaHurtowa(1.5);
    Sklep.setCenaDetaliczna(3);
    Sklep sklep1 = new Sklep();
    Sklep sklep2 = new Sklep();
    Sklep sklep3 = new Sklep();
    sklep1.kupno(100);
    sklep2.kupno(200);
    sklep3.kupno(300);
    System.out.println("Sklepy: \n" + sklep1 + '\n' + sklep2 + '\n' + sklep3 + '\n');
    sklep1.sprzedaż(95);
    sklep2.sprzedaż(100);
    sklep3.sprzedaż(250);
    podajZyski(sklep1);      // uwaga: to jest wywołanie metody z klasy Test, 
    podajZyski(sklep2);      // którą to metodę też trzeba napisać    
    podajZyski(sklep3); 
  }

}
wyprowadził na konsolę podane wyniki:

Sklepy: 
Sklep nr 1 aktualny stan jabłek 100.0 kg
Sklep nr 2 aktualny stan jabłek 200.0 kg
Sklep nr 3 aktualny stan jabłek 300.0 kg

Sklep nr 1 aktualny stan jabłek 5.0 kg
Wydatki: 150.0
Dochody: 285.0
Zysk   : 135.0

Sklep nr 2 aktualny stan jabłek 100.0 kg
Wydatki: 300.0
Dochody: 300.0
Zysk   : 0.0

Sklep nr 3 aktualny stan jabłek 50.0 kg
Wydatki: 450.0
Dochody: 750.0
Zysk   : 300.0

Uwaga: wszystkie pola klasy Sklep muszą być prywatne.


Zadanie 2 - max. 6 punktów

Mamy półki. Każda półka ma swoją nazwę i rozmiar (liczbę książek, które może pomieścić) 
Mamy książki. Opis książki to: autor, tytuł. 
Inicjalnie każda książka jest poza jakąkolwiek półką. 
Można ją wstawić na wybraną półkę, albo zdjąć z półki, na której się znajduje. 

Stworzyć klasy Book i Bookshelf, opisujące książki i półki w taki sposób, aby następujący program:


public class TestBook {

  
  public static void main(String[] args) {
    Book b1 = new Book("A", "bbb");
    Book b2 = new Book("B", "ccc");
    Book b3 = new Book("C", "ddd");
    
    Bookshelf bs1 = new Bookshelf("P1", 10);
    Bookshelf bs2 = new Bookshelf("P2", 2);
    
    try {
      bs1.insert(b1);
      bs1.insert(b2);
      bs1.insert(b3);
      
      System.out.println(bs1);
      for (Book b : bs1.getBooks()) System.out.println(b);
      
      bs2.insert(b1);
    } catch (Exception exc) {
        System.out.println(exc.getMessage());      
    }
    
    try {
      for (Book b : bs1.getBooks()) bs1.remove(b);
      bs2.insert(b1);
      bs2.insert(b2);
      
      System.out.println(bs2);
      for (Book b : bs2.getBooks()) System.out.println(b);
      
      bs2.insert(b3);
    } catch (Exception exc) {
        System.out.println(exc.getMessage());      
    }
    
    try {
      bs2.remove(b3);
    } catch (Exception exc) {
        System.out.println(exc.getMessage());      
    }
  }

}
wyprowadził następujące wyniki:

Półka P1
A bbb
B ccc
C ddd
Nie mogę wstawić książki na półkę (Półka P2) - jest już na półce: Półka P1
Półka P2
A bbb
B ccc
Nie mogę wstawić książki na półkę (Półka P2) - brak miejsca
Nie mogę zdjąć książki z półki (Półka P2) - nie jest na tej półce
